1. Redux Store Setup (cartSlice.js)
// cartSlice.js
import { createSlice } from '@reduxjs/toolkit';

const initialState = {
  cart: []
};

const cartSlice = createSlice({
  name: 'cart',
  initialState,
  reducers: {
    addToCart(state, action) {
      const product = action.payload;
      const existing = state.cart.find(item => item.name === product.name);
      if (existing) {
        existing.quantity += 1;
      } else {
        state.cart.push({ ...product, quantity: 1 });
      }
    },
    removeFromCart(state, action) {
      state.cart = state.cart.filter(item => item.name !== action.payload);
    },
    updateQuantity(state, action) {
      const { name, quantity } = action.payload;
      const item = state.cart.find(item => item.name === name);
      if (item) item.quantity = quantity;
    }
  }
});

export const { addToCart, removeFromCart, updateQuantity } = cartSlice.actions;
export default cartSlice.reducer;

-----store.js
import { configureStore } from '@reduxjs/toolkit';
import cartReducer from './cartSlice';

export default configureStore({
  reducer: { cart: cartReducer }
});

2. Product & Cart Components
ProductList.js

import React from 'react';
import { useDispatch } from 'react-redux';
import { addToCart } from './cartSlice';

const products = [
  { name: "Laptop", price: 1200 },
  { name: "Mouse", price: 25 },
  { name: "Keyboard", price: 45 }
];

export default function ProductList() {
  const dispatch = useDispatch();
  return (
    <div>
      <h2>Products</h2>
      <div style={{ display: "flex", gap: 20 }}>
        {products.map(p => (
          <div key={p.name} style={{ border:"1px solid #ccc", borderRadius:8, padding:30, width:160, textAlign:'center' }}>
            <h3>{p.name}</h3>
            <p>${p.price}</p>
            <button onClick={() => dispatch(addToCart(p))}>Add to Cart</button>
          </div>
        ))}
      </div>
    </div>
  );
}

----Cart.js
import React from 'react';
import { useSelector, useDispatch } from 'react-redux';
import { removeFromCart, updateQuantity } from './cartSlice';

export default function Cart() {
  const cartItems = useSelector(state => state.cart.cart);
  const dispatch = useDispatch();

  return (
    <div>
      <h2>Shopping Cart</h2>
      {cartItems.map(item => (
        <div key={item.name}>
          <span>{item.name} (${item.price}) </span>
          <input 
            type="number" 
            value={item.quantity}
            min="1"
            onChange={e => dispatch(updateQuantity({ name: item.name, quantity: Number(e.target.value) }))}
            style={{ width:40, marginRight:6 }}
          />
          <button onClick={() => dispatch(removeFromCart(item.name))}>Remove</button>
        </div>
      ))}
    </div>
  );
}

3. App and Provider
App.js

import React from 'react';
import { Provider } from 'react-redux';
import store from './store';
import ProductList from './ProductList';
import Cart from './Cart';

function App() {
  return (
    <Provider store={store}>
      <div style={{ padding: 40, background: "#fff", color: "#000" }}>
        <h1 style={{textAlign:"center"}}>My Shop</h1>
        <ProductList />
        <Cart />
      </div>
    </Provider>
  );
}

export default App;
